<div class="index-page">
  <div class="layout-main">
    <div class="layout-results">
      <div class="row">
        <div class="col-xs-12 col-md-8">
          <div class="criteria text-left">
            <h3 id="nb-results"><%= results_text(@jobs.count) %></h3>
            <ul class="list-inline hidden-xs hidden-sm" id="home-search-criteria">
              <% if @search[:start_date] %><li>Date de d√©but: <%= date_string(@search[:start_date]) %> </li><% end %>
              <% if @search[:end_date] %><li>Date de fin: <%= date_string(@search[:end_date]) %> </li><% end %>
              <% if @search[:location] %><li>Localisation: <%= @search[:location] %> </li><% end %>
            </ul>
          </div>
        </div>
        <div class="hidden-xs hidden-sm col-md-4 criteria text-center">
          <h3 class="btn btn-primary" id="filter-btn">Filtrer les offres</h3>
        </div>
        <div class="col-xs-12">
          <div id="filter" class="collapse filter-form">
            <%= render 'filterform' %>
          </div>
        </div>
      </div>
      <div class="row">
        <div class="layout-cards" id="results">
          <% @jobs.each do |job| %>
            <%= render 'jobcard', job: job %>
          <% end %>
        </div>
      </div>
    </div>
    <div class="layout-map">
      <div id="map"></div>
    </div>
  </div>
</div>

<% content_for(:js) do %>
  <%= javascript_tag do  %>
    let animateFilterBtn = () => {
      var filterBtn = document.getElementById("filter-btn");
      var filterVisibility = -1;
      filterBtn.addEventListener("click", (event) => {
        event.preventDefault;
        var filterForm = document.getElementById("filter");
        var criteriaHome = document.getElementById("home-search-criteria");
        filterVisibility = filterVisibility * -1;
        if (filterVisibility === 1) TweenLite.to(filterForm, 0.5, {className:"-=collapse"});
        if (filterVisibility === -1) TweenLite.to(filterForm, 0.5, {className:"+=collapse"});
        TweenLite.to(criteriaHome, 0.5, {className:"+=collapse"});
      });
    };

    let rotateCards = () => {
      var cards = document.querySelectorAll(".card");
      cards.forEach((card) => {
        TweenLite.set(".card", {perspective:800});
        TweenLite.set(".card-main", {transformStyle:"preserve-3d"});
        TweenLite.set(".back", {rotationY:-180});
        TweenLite.set([".back", ".front"], {backfaceVisibility:"hidden"});
        $(".card").hover(
          function() {
            TweenLite.to($(this).find(".card-main"), 1.2, {rotationY:180, ease:Back.easeOut});
          },
          function() {
            TweenLite.to($(this).find(".card-main"), 1.2, {rotationY:0, ease:Back.easeOut});
          }
        );
      });
    };

    animateFilterBtn();
    rotateCards();



    $(document).ready(function() {

      var handler = Gmaps.build('Google');

      handler.buildMap({ internal: { id: 'map' } }, function() {
      markers = handler.addMarkers(<%= raw @hash.to_json %>);

      if(navigator.geolocation) {
        navigator.geolocation.getCurrentPosition(displayOnMap);
      }


      handler.bounds.extendWith(markers);
      handler.fitMapToBounds();
      if (markers.length == 0) {
        handler.getMap().setZoom(2);
        } else if (markers.length == 1) {
        handler.getMap().setZoom(14);
        }


      });


      function displayOnMap(position) {
        var homemarker = handler.addMarker({
          lat: position.coords.latitude,
          lng: position.coords.longitude,
          picture: {
                  url: "<%= image_url('geoloc.png') %>",
                  width:  36,
                  height: 36
                },
                infowindow: "Ta position!"
        });
      };


      });

  <% end %>
<% end %>
